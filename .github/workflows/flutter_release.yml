name: Flutter CI-CD

# trigger condition for the action
on:
  push:
    branches: [Pages]
  # pull_request:
  #   branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: subosito/flutter-action@v1.4.0
        with:
          # The Flutter version to make available on the path
          flutter-version: "1.22.4" # optional
          # The Flutter build release channel
          #channel: # optional, default is stable #should be modified when deploying a web version
      - run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.jks.asc
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" --batch release.jks.asc > key.jks
      #install dependecies :
      - run: flutter pub get
      #run tests :
      - run: flutter test
      - run: flutter build appbundle

      - name: Push APK to Releases - save artifact
        uses: actions/upload-artifact@v2
        with:
          name: apk-artifact
          path: "build/app/outputs/flutter-apk/app-release.apk"


   deploy_apk:
     name: Deploy Android Beta
     needs: [Build]
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v1
       - uses: actions/setup-java@v1
         with:
           java-version: '12.x'
       - uses: subosito/flutter-action@v1
         with:
           channel: 'dev'
       - uses: maierj/fastlane-action@v0.9.5
         with:
           lane: 'beta'
           subdirectory: 'android'
         env:
           GITHUB_API_TOKEN: ${{ secrets.JSON_TOKEN }}

